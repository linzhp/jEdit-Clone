<!-- jEdit buffer-local properties:                    -->
<!-- :indentSize=1:noTabs=yes:maxLineLen=72:tabSize=2: -->

<chapter id="api-error-classes"><title>Error Reporting Classes</title>

<para>
  The Plugin API implements error sources with an interface,
  <classname>ErrorSource</classname> and a default implementing class,
  <classname>DefaultErrorSource</classname>. The latter class should be
  adequate for most error reporting tasks.
</para>

<sect1 id="class-errorsource"><title>Interface ErrorSource</title>

<para>
	This interface defines an abstract collection of error objects.  It specifies
	methods for extracting data from the collection.
</para>
  <itemizedlist>
    <listitem>
      <funcsynopsis>
        <funcprototype>
          <funcdef>String <function>getName</function></funcdef>
          <paramdef></paramdef>
        </funcprototype>
      </funcsynopsis>
      <para>
        Returns a string description of this error source.
      </para>
    </listitem>

    <listitem>
      <funcsynopsis>
        <funcprototype>
          <funcdef>int <function>getErrorCount</function></funcdef>
          <paramdef></paramdef>
        </funcprototype>
      </funcsynopsis>
      <para>
        Returns the total number of errors in the collection.
      </para>
    </listitem>

    <listitem>
      <funcsynopsis>
        <funcprototype>
          <funcdef>Error[] <function>getAllErrors</function></funcdef>
          <paramdef></paramdef>
        </funcprototype>
      </funcsynopsis>
      <para>
        Returns an array containing all error objects in the collection.
      </para>
    </listitem>

    <listitem>
      <funcsynopsis>
        <funcprototype>
          <funcdef>int <function>getFileErrorCount</function></funcdef>
          <paramdef>String <parameter>path</parameter></paramdef>
        </funcprototype>
      </funcsynopsis>
      <para>
        Returns the number of errors relating to the file specified by
        <parameter>path</parameter>.
      </para>
    </listitem>

    <listitem>
      <funcsynopsis>
        <funcprototype>
          <funcdef>Error[] <function>getFileErrors</function></funcdef>
          <paramdef>String <parameter>path</parameter></paramdef>
        </funcprototype>
      </funcsynopsis>
      <para>
        Returns an array containing the errors relating to the
        file specified by the <parameter>path</parameter>.
      </para>
    </listitem>

    <listitem>
      <funcsynopsis>
        <funcprototype>
          <funcdef>Error[] <function>getLineErrors</function></funcdef>
          <paramdef>Buffer <parameter>buffer</parameter></paramdef>
          <paramdef>int <parameter>lineIndex</parameter></paramdef>
        </funcprototype>
      </funcsynopsis>
      <para>
        Returns an array of error objects for the file contained in
        <parameter>buffer</parameter> at the line index represented
        by <parameter>line</parameter>.
      </para>
    </listitem>

  </itemizedlist>


</sect1>

<sect1 id="class-defaulterrorsource"><title>Class DefaultErrorSource</title>

<para>
  The constructor for a <classname>DefaultErrorSource</classname> object
  takes a single parameter: a <classname>String</classname> representing
  the name assigned to the error source.  The name can be obtained with the
  method <function>getName()</function>.
</para>

<para>
  When a <classname>DefaultErrorSource</classname> (or any object
  derived from the <classname>ErrorSource</classname> interface) is
  created, the object owning the error source (typically a plugin core
  object) should register the source's name with the EditBus. The
  following code serves this purpose:
</para>

<informalexample><programlisting>    EditBus.addToNamedList(ErrorSource.ERROR_SOURCES_LIST,<replaceable>errorSource</replaceable>);
</programlisting></informalexample>

<para>
  In addition to the methods implementing <classname>ErrorSource</classname>,
  this class contains the following thread-safe method that
  creates an error object, adds it to the source's collection, and
  notifies other components of the new error:
</para>

<itemizedlist>
  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public synchronized void <function>addError</function></funcdef>
        <paramdef>int <parameter>type</parameter></paramdef>
        <paramdef>String <parameter>path</parameter></paramdef>
        <paramdef>int <parameter>lineIndex</parameter></paramdef>
        <paramdef>int <parameter>start</parameter></paramdef>
        <paramdef>int <parameter>end</parameter></paramdef>
        <paramdef>String <parameter>error</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
    <para>
      The <parameter>type</parameter> parameter may either be
      <constant>ErrorSource.ERROR</constant> (equal to 0) or
      <constant>ErrorSource.WARNING</constant> (equal to 1). The other
      parameters describe components of typical error output by a compiler:
      the file name referenced by the error, the line number and starting and
      ending line offsets (not file offsets) of the text referenced by the
      error, and a <classname>String</classname>containing a description of
      the error.
    </para>
    <para>
      This method also sends an <classname>ErrorSourceUpdate</classname>
      message to the EditBus with a reference to the new error
      object and other details.
    </para>
  </listitem>
 </itemizedlist>

 <para>
   The followng methods empties the error source's internal collection
   of error objects:
 </para>
<itemizedlist>
     <listitem>
      <funcsynopsis>
        <funcprototype>
          <funcdef>void <function>clear</function></funcdef>
          <paramdef></paramdef>
        </funcprototype>
      </funcsynopsis>
      <para>
          The method also sends an <classname>ErrorSourceUpdate</classname>
          message to the EditBus signalling that the error source is now
          empty.
      </para>
    </listitem>

</itemizedlist>


<para>
  <classname>DefaultErrorSource</classname> also implements the
  <classname>EBComponent</classname> interface.  As discussed
  in <xref linkend="plugin-class-EBPlugin"/>, this means that the object
  can receive EditBus messages if it is registered
  with a call to <function>EditBus.addToBus()</function>. It handles
  <classname>BufferUpdate</classname> messages by iterating over any
  error objects and causing them to obtain data from a buffer being
  opened and clear the data when that buffer is closed.
</para>

</sect1>

<sect1 id="api-error-object"><title>Interface ErrorSource.Error</title>

<para>
  The <classname>ErrorSource</classname> interface contains an inner
  interface <classname>Error</classname> that defines required behavior of
  an error object.  Its methods specify the required attributes
  of any derived error object.
</para>

<itemizedlist>

    <listitem>
      <funcsynopsis>
        <funcprototype>
          <funcdef>int <function>getErrorType</function></funcdef>
          <paramdef></paramdef>
        </funcprototype>
      </funcsynopsis>
      <para>
        Returns either <constant>ErrorSoure.WARNING</constant> (0)
        or <constant>ErrorSource.ERROR</constant> (1).
      </para>
    </listitem>

    <listitem>
      <funcsynopsis>
        <funcprototype>
          <funcdef>ErrorSource <function>getErrorSource</function></funcdef>
          <paramdef></paramdef>
        </funcprototype>
      </funcsynopsis>
    </listitem>

    <listitem>
      <funcsynopsis>
        <funcprototype>
          <funcdef>Buffer <function>getBuffer</function></funcdef>
          <paramdef></paramdef>
        </funcprototype>
      </funcsynopsis>
      <para>
        Returns the buffer asociated with this error, or
        <constant>null</constant> if no such buffer exists.
      </para>
    </listitem>

    <listitem>
      <funcsynopsis>
        <funcprototype>
          <funcdef>String <function>getFilePath</function></funcdef>
          <paramdef></paramdef>
        </funcprototype>
      </funcsynopsis>
    </listitem>

    <listitem>
      <funcsynopsis>
        <funcprototype>
          <funcdef>String <function>getFileName</function></funcdef>
          <paramdef></paramdef>
        </funcprototype>
      </funcsynopsis>
    </listitem>

    <listitem>
      <funcsynopsis>
        <funcprototype>
          <funcdef>int <function>getLineNumber</function></funcdef>
          <paramdef></paramdef>
        </funcprototype>
      </funcsynopsis>
    </listitem>

    <listitem>
      <funcsynopsis>
        <funcprototype>
          <funcdef>int <function>getStartOffset</function></funcdef>
          <paramdef></paramdef>
        </funcprototype>
      </funcsynopsis>
    </listitem>

    <listitem>
      <funcsynopsis>
        <funcprototype>
          <funcdef>int <function>getEndOffset</function></funcdef>
          <paramdef></paramdef>
        </funcprototype>
      </funcsynopsis>
    </listitem>

    <listitem>
      <funcsynopsis>
        <funcprototype>
          <funcdef>String <function>getErrorMessage</function></funcdef>
          <paramdef></paramdef>
        </funcprototype>
      </funcsynopsis>
      <para>
        These methods retrieve the line number, the starting
        and ending column offsets, and the error message stored for the error.
        They are typically derived from the error output of a compiler or
        similar application.
      </para>
    </listitem>
</itemizedlist>
</sect1>

<sect1 id="class-error"><title>class DefaultErrorSource.DefaultError</title>
<para>
  <classname>DefaultErrorSource</classname> likewise
  contains an inner class <classname>DefaultError</classname>.
  Objects of the inner class are created by the
  <function>DefaultErrorSource.addObject()</function> method. The
  class implements each of the methods of the
  <classname>ErrorSource.Error</classname> interface.
</para>

<para>
  The <classname>DefaultErrorSource</classname> object managing a set of
  error objects calls two other important methods in
  <classname>DefaultError</classname> in response to
  <classname>BufferUpdate</classname> messages. The purpose of the methods
  is to keep the state of<classname>DefaultError</classname> objects
  synchronized with open text buffers.
</para>

<itemizedlist>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public void <function>openNotify</function></funcdef>
        <paramdef>Buffer <parameter>buffer</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
    <para>
      This method is called in response to
      <classname>BufferUpdate</classname> messages that signal the
      opening of a text buffer. When a buffer is opened,
      <function>openNotify</function> obtains and stores
      <classname>Position</classname> objects representing the location
      of the buffer text referenced by the error. These objects allow the
      error object to locate the relative position of error text after
      insertions or deletions are made in the buffer.
    </para>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public void <function>closeNotify</function></funcdef>
        <paramdef>Buffer <parameter>buffer</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
    <para>
      In response to <classname>BufferUpdate</classname> messages that signal
      the closing of a text buffer, this method clears the
      <classname>Position</classname> objects acquired by
      <function>openNotify()</function>.
    </para>
  </listitem>
</itemizedlist>
</sect1>

<sect1 id="api-error-message"><title>Class ErrorSourceUpdate</title>

<para>
  In the default error source implementation, this message is sent after
  an new error object is created and added to the source's error
  collection. It is used by the <application>ErrorList</application>
  plugin to update its display of error information.  The elenments of
  this class are listed in <xref linkend="class-errorsource-update"/>.
</para>

</sect1>

</chapter>
