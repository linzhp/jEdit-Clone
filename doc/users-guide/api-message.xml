<!-- jEdit 3.1 Plugin Guide, (C) 2001 John Gellene -->

<!-- jEdit buffer-local properties:                           -->
<!-- :indentSize=1:tabSize=2:noTabs=true:maxLineLen=72:       -->

<chapter id="api-message"><title>EditBus Classes</title>

<para>
    This section describes the <classname>EditBus</classname> class
    itself, as well as the abstract <classname>EBMessage</classname>
    class and all classes that derive from it.
    See <xref linkend="host-display-message" /> for an overview
    of how the EditBus works.
</para>

<sect1 id="class-EditBus"><title>Class EditBus</title>

  <para>
    This class defines a singleton object providing a <quote>publish and
    subscribe</quote> messaging system for all components that implement
    the	<classname>EBComponent</classname> interface, including
    <classname>View</classname> and<classname>DockableWindow</classname>
    objects.
  </para>

<itemizedlist>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public static void <function>addToBus</function></funcdef>
        <paramdef>EBComponent <parameter>component</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public static void <function>removeFromBus</function></funcdef>
        <paramdef>EBComponent <parameter>component</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
	<para>
		Adds or removes a subscribing component.
	</para>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public static void <function>addToNamedList</function></funcdef>
        <paramdef>Object <parameter>tag</parameter></paramdef>
        <paramdef>Object <parameter>entry</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public static void <function>removeFromNamedList</function></funcdef>
        <paramdef>Object <parameter>tag</parameter></paramdef>
        <paramdef>Object <parameter>entry</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
	<para>
		Manages lists of plugin labels, error sources and other objects.
	</para>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public static void <function>removeFromBus</function></funcdef>
        <paramdef>EBComponent <parameter>component</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
	<para>
		Adds or removes a subscribing component.
	</para>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public EBComponent[] <function>getComponents</function></funcdef>
        <void/>
      </funcprototype>
    </funcsynopsis>
	<para>
		Returns an array of references to all components connected to the
		EditBus.
	</para>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public void <function>send</function></funcdef>
        <paramdef>EBMessage <parameter>message</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
    <para>
        Send the specified message to all subscribers on the EditBus.
    </para>
  </listitem>

</itemizedlist>

</sect1>

<sect1 id="class-EBComponent"><title>Interface EBComponent</title>
<para>
  This interface is required for any class that subscribes to messages
  published on the EditBus. It contains a single method.
</para>

<itemizedlist>
  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public void <function>handleMessage</function></funcdef>
        <paramdef>EBMessage <parameter>message</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
  </listitem>
</itemizedlist>

</sect1>

<sect1 id="class-EBMessage"><title>Class EBMessage</title>
<para>
    This abstract class defines a message that can be sent on the EditBus to
    subscribing components.  It contains two attributes that can be obtained
    with the following methods:
</para>

<itemizedlist>
  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public Component <function>getSource</function></funcdef>
        <void/>
      </funcprototype>
    </funcsynopsis>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public boolean <function>isVetoed</function></funcdef>
        <void/>
      </funcprototype>
    </funcsynopsis>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public void <function>veto</function></funcdef>
        <void/>
      </funcprototype>
    </funcsynopsis>
    <para>
        This sets the <parameter>vetoed</parameter> state to
        <constant>true</constant>, which terminates circulation of the
        message to subscribers on the EditBus.  To preven a message from being
        vetoed, the message object must be dereived from the abstract class
        <classname>EBMessage.NonVetoable</classname>.  An object of this class
        will throw an <classname>InternalError</classname> if the
        <function>veto()</function> method is called on it.
    </para>
  </listitem>

</itemizedlist>

<para>
    A summary of classes derived from <classname>EBMessage</classname>
    can be found in the following sections.
</para>

</sect1>

<sect1 id="class-BufferUpdate"><title>Class BufferUpdate</title>
<para>
    This message is sent when the status of a buffer changes.  It may
    not be vetoed by a subscriber, so that all subscribers are
    assured of receiving it regardless of an individual subscriber's
    response.
</para>

<itemizedlist>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public <function>BufferUpdate</function></funcdef>
        <paramdef>Buffer <parameter>buffer</parameter></paramdef>
        <paramdef>View <parameter>view</parameter></paramdef>
        <paramdef>Object <parameter>what</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
    <para>
      The parameter <parameter>what</parameter> is an <classname>Object</classname>
      consisting of one of the following string literals:
    </para>
    <itemizedlist mark="bullet">
      <listitem><para><constant>"CREATED"</constant></para></listitem>
      <listitem><para><constant>"LOAD_STARTED"</constant></para></listitem>
      <listitem><para><constant>"DIRTY_CHANGED"</constant> - a change in the buffer's
        <quote>dirty</quote> status</para></listitem>
      <listitem><para><constant>"MARKERS_CHANGED"</constant></para></listitem>
      <listitem><para><constant>"MODE_CHANGED"</constant></para></listitem>
      <listitem><para><constant>"ENCODING_CHANGED"</constant></para></listitem>
      <listitem><para><constant>"SAVING"</constant></para></listitem>
    </itemizedlist>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public Buffer <function>getBuffer</function></funcdef>
        <void/>
      </funcprototype>
    </funcsynopsis>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public View <function>getView</function></funcdef>
        <void/>
      </funcprototype>
    </funcsynopsis>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public Object <function>getWhat</function></funcdef>
        <void/>
      </funcprototype>
    </funcsynopsis>
    <para>
      returns the string literal indicating the change in buffer status.
    </para>
  </listitem>

</itemizedlist>

</sect1>

<sect1 id="class-CreateDockableWindow">
<title>Class CreateDockableWindow</title>

<para>
  This message is sent to cause a plugin core object to create a plugin
  window object.
</para>

<itemizedlist>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public <function>CreateDockableWindow</function></funcdef>
        <paramdef>View <parameter>view</parameter></paramdef>
        <paramdef>String <parameter>name</parameter></paramdef>
        <paramdef>String <parameter>position</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
    <para>
      The parameter <parameter>name</parameter> represnets the name of
      the plugin and is ultimately drawn form the plugin's propoerties file.
      The <parameter>position</parameter> is supplied by the plugin
      management facility based upon user settings.
    </para>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public View <function>getView</function></funcdef>
        <void/>
      </funcprototype>
    </funcsynopsis>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public String <function>getDockableWindowName</function></funcdef>
        <void/>
      </funcprototype>
    </funcsynopsis>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public String <function>getPosition</function></funcdef>
        <void/>
      </funcprototype>
    </funcsynopsis>
    <para>
      returns the string literal indicating the change in buffer status.
    </para>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public DockableWindow <function>getDockableWindow</function></funcdef>
        <void/>
      </funcprototype>
    </funcsynopsis>
    <para>
      returns the name of the <classname>DockableWindow</classname>
      created in response to the message; it must be attached to the message
      through a call to <function>setDockableWindow()</function> by the
      plugin core object.
    </para>
  </listitem>

</itemizedlist>

</sect1>

<sect1 id="class-EditorExiting"><title>Class EditorExiting</title>

<para>
  This message signifies that the host application is about to exit.  It
  cannot be vetoed.  The message has no parameters other than the source
  and no methods other than the <function>getSource()</function> method
  of <classname>EBMessage</classname>.
</para>

<itemizedlist>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public <function>EditorExiting</function></funcdef>
        <paramdef>Component <parameter>source</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public Component <function>getSource</function></funcdef>
        <void/>
      </funcprototype>
    </funcsynopsis>
    <para>
      inherited from <classname>EBMessage</classname>.
    </para>
  </listitem>

</itemizedlist>

</sect1>

<sect1 id="class-EditorExitRequested"><title>Class EditorExitRequested</title>

<para>
  This message signifies that a request has been made for the host application
  to exit. The request is subject to cancellation in response to a request to
  write a modified buffer to storage. It may not be vetoed.
</para>

<itemizedlist>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public <function>EditorExitRequested</function></funcdef>
        <paramdef>View <parameter>view</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
    <para>
      the parameter <parameter>view</parameter> represent the view from
      which the exit request originated.
    </para>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public View <function>getView</function></funcdef>
        <void/>
      </funcprototype>
    </funcsynopsis>
    <para>
      inherited from <classname>EBMessage</classname>.
    </para>
  </listitem>

</itemizedlist>

</sect1>

<sect1 id="class-EditorStarted"><title>Class EditorStarted</title>

<para>
  This message signifies that the host application has styarted. The
  message is sent before any views are created. The message has no
  parameters other than the source and no methods other than the
  <function>getSource()</function> method of <classname>EBMessage</classname>.
  It may not be vetoed.
</para>

<itemizedlist>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public <function>EditorStarted</function></funcdef>
        <paramdef>Component <parameter>source</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public Component <function>getSource</function></funcdef>
        <void/>
      </funcprototype>
    </funcsynopsis>
    <para>
      inherited from <classname>EBMessage</classname>.
    </para>
  </listitem>

</itemizedlist>

</sect1>

<sect1 id="class-EditPaneUpdate"><title>Class EditPaneUpdate</title>
<para>
    This message is sent when the status of a edit pane changes.  It may
    not be vetoed.
</para>

<itemizedlist>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public <function>EditPaneUpdate</function></funcdef>
        <paramdef>EditPane <parameter>editPane</parameter></paramdef>
        <paramdef>Object <parameter>what</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
    <para>
      The parameter <parameter>what</parameter> is an <classname>Object</classname>
      consisting of one of the following string literals:
    </para>
    <itemizedlist mark="bullet">
      <listitem><para><constant>"CREATED"</constant></para></listitem>
      <listitem><para><constant>"DESTROYED"</constant></para></listitem>
      <listitem><para><constant>"BUFFER_CHANGED"</constant> - a change in the buffer
        displayed in the edit pane</para></listitem>
    </itemizedlist>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public EditPane <function>getEditPane</function></funcdef>
        <void/>
      </funcprototype>
    </funcsynopsis>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public Object <function>getWhat</function></funcdef>
        <void/>
      </funcprototype>
    </funcsynopsis>
    <para>
      returns the string literal indicating the change in edit pane status.
    </para>
  </listitem>

</itemizedlist>


</sect1>

<sect1 id="class-MacrosChanged"><title>Class MacrosChanged</title>

<para>
  This message signifies that the list of available macros have changed.  It
  cannot be vetoed.  The message has no parameters other than the source
  and no methods other than the <function>getSource()</function> method
  of <classname>EBMessage</classname>.
</para>

<itemizedlist>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public <function>MacrosChanged</function></funcdef>
        <paramdef>Component <parameter>source</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public Component <function>getSource</function></funcdef>
        <void/>
      </funcprototype>
    </funcsynopsis>
    <para>
      inherited from <classname>EBMessage</classname>.
    </para>
  </listitem>

</itemizedlist>

</sect1>

<sect1 id="class-PropertiesChanged"><title>Class PropertiesChanged</title>

<para>
  This message is sent when configuration settings have been changed through
  any of the option panes in the options dialog. The message
  cannot be vetoed.  It has no parameters other than the source
  and no methods other than the <function>getSource()</function> method
  of <classname>EBMessage</classname>.
</para>

<itemizedlist>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public <function>PropertiesChanged</function></funcdef>
        <paramdef>Component <parameter>source</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public Component <function>getSource</function></funcdef>
        <void/>
      </funcprototype>
    </funcsynopsis>
    <para>
      inherited from <classname>EBMessage</classname>.
    </para>
  </listitem>

</itemizedlist>

</sect1>

<sect1 id="class-SearchSettingsChanged">
<title>Class SearchSettingsChanged</title>

<para>
  This message is sent when settings in the <quote>Search and
  Replace</quote> dialog have changed. It cannot be vetoed. The message
  has no parameters other than the source and no methods other than the
  <function>getSource()</function> methodof <classname>EBMessage</classname>.
</para>

<itemizedlist>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public <function>SearchSettingsChanged</function></funcdef>
        <paramdef>Component <parameter>source</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public Component <function>getSource</function></funcdef>
        <void/>
      </funcprototype>
    </funcsynopsis>
    <para>
      inherited from <classname>EBMessage</classname>.
    </para>
  </listitem>

</itemizedlist>

</sect1>

<sect1 id="class-VFSUpdate"><title>Class VFSUpdate</title>
<para>
    This message is sent when the status of a file or directory changes.
    This allows subscribers that display or operate upon files an
    opportunity to adjust their state.  This message may be vetoed by a
    subscriber.
</para>

<itemizedlist>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public <function>VFSUpdate</function></funcdef>
        <paramdef>String <parameter>path</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
    <para>
      The parameter <parameter>path</parameter> represents the path of
      the file or directory that is the subject of the message,
    </para>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public String <function>getPath</function></funcdef>
        <void/>
      </funcprototype>
    </funcsynopsis>
  </listitem>

</itemizedlist>


</sect1>

<sect1 id="class-ViewUpdate"><title>Class ViewUpdate</title>
<para>
    This message is sent when the status of a view changes.  It may
    not be vetoed.
</para>

<itemizedlist>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public <function>ViewUpdate</function></funcdef>
        <paramdef>View <parameter>view</parameter></paramdef>
        <paramdef>Object <parameter>what</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
    <para>
      The parameter <parameter>what</parameter> is an <classname>Object</classname>
      consisting of one of the following string literals:
    </para>
    <itemizedlist mark="bullet">
      <listitem><para><constant>"CREATED"</constant></para></listitem>
      <listitem><para><constant>"CLOSED"</constant></para></listitem>
    </itemizedlist>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public View <function>getView</function></funcdef>
        <void/>
      </funcprototype>
    </funcsynopsis>
  </listitem>

  <listitem>
    <funcsynopsis>
      <funcprototype>
        <funcdef>public Object <function>getWhat</function></funcdef>
        <void/>
      </funcprototype>
    </funcsynopsis>
    <para>
      returns the string literal indicating the change in view status.
    </para>
  </listitem>

</itemizedlist>

</sect1>

</chapter>
