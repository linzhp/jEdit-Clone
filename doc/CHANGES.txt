JEDIT 2.4 VERSION HISTORY

* Version 2.4final

+ Enhancements

- The text area should now retain focus when switching windows
- Documentation updates
- 'Untitled' buffers no longer saved in sessions
- Quick hack to let JBrowse and QuickFile work for now (but they should
  still be updated for the new API so that the options dialog can load faster)

+ Bug Fixes

- Context menus were not added to newly created text areas when splitting
  (since 2.4pre7)
- TeX mode didn't highlight \', \" or \` very well (since 2.4pre2)

* Version 2.4pre7

+ New Features

- The text area right-click menu can now be edited in the Global Options
  dialog box. Any action whatsoever (including plugin actions) can be added
  to the menu now

+ Enhancements

- Firewall plugin sources moved to their own fileset
- The 'Open' and 'Save As' dialog boxes are now loaded in a background thread
  with minimum priority once jEdit has started
- Documentation updates
- Menu item mnemonics no longer shown in context menu

+ Bug Fixes

- JEditTextArea.addNotify() now sets focusedComponent if hasFocus() returns
  true (this should finally solve the 'caret losing focus' problem) (since
  1.7pre5)
- Sometimes a 'Save As' wouldn't update the buffer tab (since 2.4pre6)
- TokenMarker.linesChanged() tweaked once again -- this should result in more
  accurate syntax highlighting when lines are being deleted, for example
  (since 2.4pre1)
- select-document-home and select-document-end actions didn't have key bindings
  (since 2.4pre6)
- Double-clicking and dragging backwards didn't select the word that you
  double-clicked originally (since 2.3pre2)

* Version 2.4pre6

+ New Features

- In C-like modes, the indent will be shifted if the previous line contains
  an 'if', 'else', 'while', 'for' or 'case' statement. This is implemented
  using a regular expression in the 'indentPrevLine' buffer-local property
- The Firewall plugin by Dirk Moebius <dmoebius@gmx.net> is now included
  in the core download. The Firewall plugin allows you to use the plugin
  manager and latest version check behind a firewall

+ Enhancements

- XML mode now opens all files whose first line contains <?xml in XML mode
- XSL mode now highlights JavaScript in <xsl:script> and <xsl:eval> tags
  (Oliver Rutherfurd)
- jEdit will now display more meaningful error messages when you try to
  open a directory, or a file with insufficent permissions
- Text area actions are now implementations of the EditAction class. This
  simplifies matters in a few places
- New jEdit.getBooleanProperty() and setBooleanProperty() methods
- Documentation updates
- Option panes now only create their UIs on demand, as a result the
  'Global Options' dialog box should appear much more quickly

+ Bug Fixes

- If an error occurred while loading or saving a file, jEdit would claim that
  the file had been modified on disk (since 2.4pre1)
- All mode files were invalid because their first line was not
  '<?xml version="1.0"?>' (since 2.4pre2)
- The text area no longer loses focus when saving (since 2.3pre3)

+ API Changes

- InputHandler.addKeyBinding() and executeAction() now take EditActions, not
  ActionListeners as parameters
- The OptionPane API has changed:
  - If you are implementing the OptionPane interface directly, you must now
    implement an init() method which takes care of setting up the GUI.
  - If you extend AbstractOptionPane, you must implement an _init() method
    which takes care of setting up the GUI, and rename your save() method to
    _save()

* Version 2.4pre5

+ New Features

- Digits will be highlighted if the HIGHLIGHT_DIGITS attribute is set to
  "TRUE" on a ruleset
- The background color of syntax tokens can now be specified (Andre Kaplan)
- If an autosave file is found, jEdit will now offer to load it

+ Enhancements

- TokenMarker now uses a hashing algorithm to check against far fewer rules
  than previously. This should result in a 2-10x speed improvement! This is
  particularly noticable when loading files
- 'Action tokens' overhead removed TokenMarker, should speed things up a
  wee bit
- XMode documentation
- xmode.dtd is actually a valid DTD now (Mike Dillon)
- Documentation updates
- Go to Line and Select Line Range commands moved to top level of Edit menu for
  easier access

+ Bug Fixes

- Incremental search didn't beep if no match was found (since 2.4pre4)
- xmode.dtd didn't define attributes of KEYWORDS tag (since 2.4pre2)
- Inserting characters after using the splitting commands didn't work
  (since 2.4pre4)
- Sometimes an 'autosave file found' dialog box would be shown when
  reloading a buffer (since 2.4pre4)

* Version 2.4pre4

+ New Features

- New 'search bar' with incremental search support replaces QuickSearch
  field on toolbar
- New token types added: Token.{FUNCTION,MARKUP,DIGIT}
- New edit modes:
  - JMK
  - CSS (Mike Dillon)
  - Pascal (Kristian Ovaska)

+ Enhancements

- Improved Search & Replace and HyperSearch dialog boxes
- Utilities->Reload Edit Modes now works with the -nosettings switch
- If the plugin list cannot be loaded, the plugin manager now displays a more
  helpful error message telling the user to install the Firewall plugin if they
  are behind a firewall
- JARClassLoader now displays error messages in more friendly dialog boxes,
  instead of printing stuff to the activity log
- Buffer Options dialog box improvements
- PHP mode updates (Mike Dillon)
- PHP, JSP and ColdFusion now support inline JavaScript
- ASP, JavaScript, VBScript updates (Andre Kaplan)

+ Bug Fixes

- TeX mode had problems with some {...} sequences (since 2.4pre2)
- TeX mode didn't highlight \... in math mode correctly (since 2.4pre2)
- PHP mode didn't highlight scripts in <? ... ?> tags (since 2.4pre2)
- Fixed a bug in SyntaxDocument's line handling (since 2.4pre2)
- Automatic abbrev expansion didn't work (since 2.4pre1)
- BufferTabs had problems when buffers were closed sometimes (since 2.4pre1)
- If ruleset a::A delegated to b::B which delegated to C, jEdit would look
  for a::C instead of b::C (since 2.4pre2) (Mike Dillon)
- Sources for AElfred XML parser were in the JAR but weren't installed
  (since 2.4pre2)
- Fixed a few problems with resource handling
- When run with the -nosettings switch, jEdit would create a 'mode-cache' file
  in the current directory (since 2.4pre3)

* Version 2.4pre3

jEdit 2.4pre3 is being released so soon after 2.4pre2 because an installer
error prevented 2.4pre2 from being installed properly.

+ New Features

- Previously, jEdit loaded all XML mode files on startup. This could take
  a long time. Now, we write only read a cache file, which can be loaded
  much faster. The cache file needs to be recreated when new edit modes
  are installed; invoke 'Utilities->Reload Edit Modes' to recreate it

+ Enhancements

- Ruby mode updates (Mike Dillon)
- Perl mode updates (Mike Dillon)
- Syntax highlighting streamlined

+ Bug Fixes

- jEdit didn't install due to an installer error (since 2.4pre2)
- jEdit didn't check if the buffer changed on disk when switching buffers
  (since 2.4pre1)
- The read only flag wasn't set on files (since 2.2 !!!)
- Rule sets inherited the previous rule set's keyword map if no KEYWORDS
  element was specified (since 2.4pre2)
- Fixed escape handling in delegates (Mike Dillon) (since 2.4pre2)

+ API Changes

- The ASPMode plugin will no longer work, because hard-coded token markers
  are no longer supported. ASPMode should be rewritten in the XMode XML
  syntax.

* Version 2.4pre2

+ New Features

- The XMode plugin by Mike Dillon has been integrated into the core. This means
  that:
  - you can now define edit modes using an XML syntax
  - there are more modes available -- COBOL, ColdFusion, Ruby, Scheme, AWK, etc
  - many existing modes now work better; operators are highlighted, etc
  - jEdit starts up a little slower now, because it has to parse all XML mode
    files. In a future release, we will implement a cache mechanism that will
    speed up startup
  - the Perl mode is still implemented using the old syntax system, because the
    XMode parser doesn't yet have the necessary features to highlight Perl mode
- The current line is highlighted in the gutter now

+ Enhancements

- Closing a buffer will now go to the most recently edited buffer, rather
  than the previous one

+ Bug Fixes

- 'Complete Word' didn't find all completions (since 2.4pre1)
- Inserting lines at the end of non-text files didn't work properly (since
  2.4pre1)
- File modification check on focus didn't work very well (since 2.4pre1)
- Fixed possible ClassCastException with plugin manager (since 2.3pre5)

* Version 2.4pre1

+ New Features

- The syntax highlighting system no longer reparses lines every time
  they are drawn; instead, tokens are cached and lines are only parsed
  when the document changes. This should result in smoother scrolling
  and improved performance in general
- Subsequent tokens with the same id are now merged by the syntax
  highlighting system, this should improve performance when using XMode
- JEditTextArea internals have been cleaned up and simplified somewhat
- Views now check if their buffers have changed on disk every time they
  gain focus (this can be disabled in Utilities->Global Options if
  desired)
- You can now have more than one split in a view
- C+F11 and C+F12 go to the previous and next split pane, respectively
- C+e TAB toggles between the current and previous edited buffers
- The current repeat count, if any, is now shown in the status bar
- 'Complete Word' now displays a dialog box listing all completions if
  there is more than one
- Opening a file which is already open will ask if it should be reloaded

+ Enhancements

- In the multifile search settings dialog box, the default values of the
  'directory' and 'glob' fields are taken from the current buffer's
  directory and filename extension, respectively
- If the only opened file is an untitled file with no changes, opening
  another file will close the untitled file
- 'Save As' warns you before overwriting an existing file
- Plugin manager now prints exception tracebacks to the activity log
- Mode class simplified a bit

+ Bug Fixes

- When using JEditTextAreas standalone, not having a status component would
  throw NPEs (since 2.3pre2)
- Removed debugging message when doing a 'save as' (since 2.3pre2)
- When doing a 'save as', buffers weren't repositioned in the buffer
  list if sorting is enabled (since 2.3pre2)
- CreateGetSet macro didn't work (since 2.3pre3)

+ API Changes

- Signature of TokenMarker.markTokensImpl() and TokenMarker.addToken() methods
  changed; this breaks XMode
