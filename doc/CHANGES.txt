JEDIT 2.6 VERSION HISTORY

* Version 2.6pre2

+ New Features

- New file chooser. Has the following advantages over the Swing file chooser:
  - Uses VFS code, so you can browse the local filesystem and remote FTP
    sites from one dialog box (the old FTP Browser is gone, by the way)
  - Multiple file selection is supported
  - Remote directory listings are cached for improved performance. The cache
    can be flushed with the Utilities->Flush Remote Directory Cache command
  - Tooltips are shown for obscured and truncated file names
  - More flexible sorting
  - Geometry of file chooser is saved
- Utilities->File System Browser displays a stand-alone version of the file
  chooser

+ Enhancements

- Major changes to VFS code to support browsing

+ Bug Fixes

- Plugins couldn't be removed on systems that disallow removing open files,
  such as Windows (since 2.6pre1)
- FtpVFS.getFileLength() always returned 0 (since 2.6pre1)
- FtpVFS would throw a NullPointerException if an error occurred while
  connecting to the FTP server

+ API Changes

- org.gjt.sp.jedit.REFileFilter class removed
- Many changes made to org.gjt.sp.jedit.VFS class

* Version 2.6pre1

+ New Features

- Macros can now be added to the tool bar and right-click context menu
- The bracket matching code now only checks syntax tokens of the same type
  as the bracket for matches. As a result, string literals and comments
  containing brackets should no longer cause problems
- New 'EditBuddy' plugin, included in the jEdit distribution, displays
  'initial setup' and 'new version' wizards when jEdit is first run and
  when a new version is installed, respectively. These wizards help you
  configure firewall settings, install and update plugins, view the
  change log, and other such stuff.
- 'Print' command now supports printing of line numbers, and many printing
  settings can now be customized in Utilities->Global Options->Printing
- I/O requests no longer block the GUI, and multiple requests can be
  executed at once. By default, 4 I/O threads are started; this can be
  changed in Utilities->Global Options
- I/O requests can be monitored and aborted in Utilities->I/O Progress
  Monitor. A miniature version of the progress display is in the status
  bar of each view

+ Enhancements

- Gutter border color now reflects if the respective text area has focus
- Menu bar code restructured somewhat
- View-related commands moved out of Utilities menu to new View top-level
  menu, Buffers menu is now a submenu of the new View menu as well
- Colored 'orbs' displaying file modification status are now displayed in
  the Buffers menu
- Registers and markers are now highlighted using different colors in the
  gutter
- The plugin manager now deletes files for real when removing and upgrading
  plugins; previously, it shoved them in a 'backup' directory
- Shortcut of 'Exit' command changed to C+q
- 'Exit' command now asks for confirmation (can be disabled in
  Utilities->Global Options)
- The directory search feature now sorts file names before searching
- Abbreviations and history files are not saved if they are changed on disk
  while jEdit is running
- The 'Help' menu now displays documentation for plugins that didn't load
- Improved Python mode (Ivan Frohne)
- Improved JSP mode (Vicente Salvador)
- Improved autosave feature -- dedicated autosave thread gone, and up to
  four files are autosaved at once
- The 'Plugins' and 'Help' menus now display 'More' submenus if there are
  a lot of items. This prevents them from being too long
- Threaded FTP browser

+ Bug Fixes

- Fixed installer layout bug which might be the cause of exceptions people
  have been seeing on certain platforms
- Fixed minor cosmetic problem in status bar when entering repeat counts
  where the first digit is '1'
- When buffers were saved while the view was split, the focus would
  always shift to the last (bottom or rightmost) split pane
- JEditTextArea didn't unregister the gutter from the tooltip manager, this
  could result in memory leaks
- C, C++, Java and JavaScript didn't indent 'default:' statements properly
- Empty .marks files weren't deleted if no markers were set when saving to
  an FTP server
- The caret status in the status bar wouldn't be updated when switching
  between buffers where the caret was at the beginning of both

+ API Changes

- GUIUtilities.loadMenuItem(View,String) deprecated. Use
  GUIUTilities.loadMenuItem(String) instead. Don't worry, since all existing
  plugins use the old method, it won't be removed any time soon, if at all.
- Return type of TokenMarker.markTokens() changed from Token to
  TokenMarker.LineInfo
- EditActions can now be invoked without a view (of course the action
  will still fail if it calls EditAction.getView())
- Signature of VFSManager.error() is now void error(Component comp,
  String msg, Object[] args)
- JEditTextArea.get/setDocument(), getDocumentLength() deprecated; use
  get/setBuffer(), getBufferLength() instead
- VFS class changes:
  delete(String path) changed to _delete(Buffer buffer, String path)
  canDelete() changed to _canDelete()
  new _getFileLength(Buffer buffer, String path) method
