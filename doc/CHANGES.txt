JEDIT 3.1 VERSION HISTORY

* Version 3.1pre3

+ New Features

- 'Narrow Buffer to Selection' command, temporarily hides all lines
  except those in the selection. Use 'Expand All Folds' command to
  make all lines visible. Default shortcut is C+e n
- 'Expand Fold One Level' command
- 'Select Fold' command; Control-clicking in gutter also has the same
  effect

+ Enhancements

- Folding and narrowing documentation in user's guide
- You begged, you pleaded, you bribed, you sent death threats -- and
  now you have it:

  GUIUtilities.confirm(Component comp, String name, Object[] args,
      int buttons, int type);

- Variables and functions defined in the 'Startup' macro are now
  available to all macros and BeanShell commands
- Edit mode for "B formal method" (Bruno Tatibouet)
  (see http://www.comlab.ox.ac.uk/archive/formal-methods/b.html)
- New directories are created in the currently selected directory,
  instead of the root directory of the tree
- Slightly faster local filesystem code
- Clicking on a closed fold in the gutter now only expands one level by
  default. To expand the fold fully, Shift-click it.
- Tabs in abbreviation expansions should finally work now, for real.
  However, to make this change work, the expansion is no longer
  auto-indented. So, while previously an abbrev of if()\n{\nfoo\n}
  became:

  if()
  {
          foo
  }

  It will now be:

  if()
  {
  foo
  }

  Unless you insert a tab before the 'foo' in the expansion.

+ Bug Fixes

- 'Current Directory' menu didn't ignore backup files properly
- 'Expand All Folds' command was broken
- AWK mode didn't work
- Keyboard shortcuts assigned to macros didn't work
- next/prev-char/word/line didn't properly handle cases where the first
  or last physical line was not visible
- Clicking in the text area past the last visible line wasn't handled
  properly if the last virtual line was not the last physical one
- The filesystem browser would display 'multiple request' errors when
  deleting an expanded directory with no files inside it
- Pressing enter on the first line of a fold caused problems
- Bracket matching if the offending bracket is outside the bounds of the
  screen should now work

+ API Changes

- The jEdit 2.6 form of inputProperty() and input() took a 'String[] args'
  parameter, which was obviously broken because all other canned dialog
  methods accepted 'Object[] args'. I have changed inputProperty() and
  input() to take an Object[] as well. This should not affect plugins in
  a major way because most use the old form of these methods (which did
  not have an 'args' parameter)

* Version 3.1pre2

+ New Features

- If a macro named 'Startup' exists, it is now run on startup
- 'Expand All Folds' command

+ Enhancements

- HTML-like modes (ASP, JSP, PHP, SHTML, XSL) now handle <!...>
  directives in a more consistent manner
- Changed gutter mouse behavior
- The 'Rename' dialog box in the filesystem browser now displays the
  original file name in the text entry field
- 'Insert File' and 'New File' commands in filesystem browser's
  right-click menu
- The font selector now shows all available fonts on Java 2, not just
  the 5 built-in ones
- The shortcut option pane key grabbing code is now more reliable
- Improved XML mode
- The File->Current Directory menu no longer displays autosave and
  backup files

+ Bug Fixes

- Adding new abbrevs in the Abbreviations option pane didn't work
- Macro shortcuts didn't appear in menus (but they still worked)
- The 'Center Caret on Screen' command didn't work properly if portions
  of the buffer were folded
- When deleting a range of lines, problems would occur if the second
  line in the range was folded away
- The vertical scroll bar would not be updated properly sometimes
- Bracket highlighting behaves better of the matching bracket is
  initially not visible on the viewscreen
- Binding commands to <prefix> SPACE didn't work
- Having non-existent filenames in the catalog should no longer cause
  problems
- Invalid tool bar buttons will no longer cause jEdit to not start
- A bug in the VFS layer caused the make directory command to fail on
  FTP servers if jEdit was running on Windows
- Keyboard shortcuts assigned to plugins using the old actions API
  didn't work
- There was no way to enter newlines in the abbrev editor
- File.getCanonicalPath() is called again to get rid of 8.3 filenames
  on Windows
- Abbrevs added using the 'Expand Abbreviation' command were not being
  saved

* Version 3.1pre1

+ New Features

- File permissions are now preserved when saving files on Unix systems
- Folding
  - Currently, only indent-based folding is supported. Support for more
    folding schemes will be added later
  - Folds can be collapsed an expanded in the gutter, or using the
    commands in the View->Folding menu
  - The default fold visibility level can be set in the `Global Options'
    dialog box

+ Enhancements

- Edit menu rearranged and simplified a little
- Instead of loading all edit modes the first time it is started, and a
  cache on subsequent starts, jEdit now loads a 'mode catalog' file,
  which must be manually updated when modes are added or removed. There
  is one catalog in the system mode directory, and one in the user mode
  directory. This eliminates the lengthy wait when starting jEdit for
  the first time.
- Plugin shortcuts are now shown in a separate option pane
- Gutter changes:
  - Gutter can no longer be resized
  - 'Gutter Expanded' and 'Line Numbering' commands merged into one
  - Marker/register highlighting can now be toggled
  - Gutter is repainted more efficently
- Consecutive insertions from the keyboard are now batched into one undo
- Docking area separators now look like split pane dividers when running
  with the Metal look and feel
- jEdit now notices if a file's read only status changes on disk
- \t can now be used in abbreviation expansions to insert a tab
- Improved 'Insert Date' macro (Valery Kondakoff)
- Improved Abbreviations option pane
- Commands can now be assigned up to two shortcuts
- Improved Shortcuts option panes

+ API Changes

- invalidateLine(), invalidateLineRange() methods in Gutter and
  TextAreaPainter classes replaced by methods with same names in
  JEditTextArea class
- Text area highlighters will need to be updated to work properly with
  folding.
  - jEdit now makes the distinction between 'virtual' and 'physical'
    line numbers. A physical line number is the line number in the
    document. A virtual line number is a line number on screen.
  - Buffer.virtualToPhysical() converts a virtual line number to a
    physical one. This method is very fast as it only involves an
    array lookup.
  - Buffer.physicalToVirtual() converts a physical line number to a
    virtual one. This method performs a binary search, so the number of
    operations depends on log_2(line count). For example, if the buffer
    has 4000 lines, this methd will require approximately 14 comparisons.
  - JEditTextArea.get/setFirstLine(), lineToY(), yToLine() operate on
    virtual line numbers.
  - All other methods in the text area class (including
    invalidateLine(), invalidateLineRange()) operate on physical line
    numbers.
  - TextAreaHighlight.paintHighlight() is passed a virtual line number.
- Code that deals with token markers will need to be updated.
  - markTokens() method in TokenMarker class should not be called. Call
    Buffer.markTokens() instead
  - LineInfo inner class moved from TokenMarker to Buffer class
- There won't be any more API changes in jEdit 3.1.

+ Bug Fixes

- .shortcut properties in plugins that specified shortcuts for built-in
  actions didn't work
- Fixed an obscure roundoff error in the gutter code that could cause
  line numbers to not be repainted fully
- Mixed paths (eg, C:\files\project1/file) didn't work correctly on Windows
- Tab characters in HyperSearch results caused display problems
- Fixed scrolling problem if the text area was exceptionally small
- Reloading a file would reset the line separator to the system default
- Fixed bug with combo box enter handling in EnhancedDialog class
