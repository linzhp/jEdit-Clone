JEDIT 2.5 VERSION HISTORY

* Version 2.5final

+ New Features

- SHTML mode (Mike Dillon)

+ Bug Fixes

- Adding buttons with icons loaded from external files didn't work on non-Unix
  systems
- Fixed bug with highlighting SPAN statements with the EXCLUDE_MATCH flag set
  (Mike Dillon)
- Fixed possible NullPointerException in help viewer, probably caused by
  Java bug (since 2.5pre7) 
- jEdit would erronously write an autosaved buffer back to disk after it had
  been recovered
- 'Stop' button in installer didn't work (since 2.5pre2)

* Version 2.5pre8

+ New Features

- VHDL edit mode (Dante Fabrizio)
- View.setInputHandler() method added, for plugins that want to do non-trivial
  input handling (eg, CodeAid)

+ Enhancements

- jEdit plugin central will be moved to SourceForge soon. To make the
  transition easier, the plugin manager has been updated to use the
  SourceForge URL to receive plugin info

+ Bug Fixes

- Another attempt to fix the 'async requests executed twice' bug (since 2.5pre6)
- The help viewer would not work properly after being closed and reopened
  (since 2.5pre7)
- Fixed possible divide by zero in JEditTextArea.offsetToX()

* Version 2.5pre7

+ Bug Fixes

- WorkThread class no longer prints debugging messages as errors
  (since 2.5pre6)
- Delete line didn't work properly if the buffer only had two lines, both
  empty
- Fixed possible ArrayIndexOutOfBounds in select-paragraph command
- Fixed minor problem with join-lines action
- 'Select Line Range' would print an exception if invalid line numbers were
  entered
- Geometry of search & replace dialog box was only saved if the user
  clicked the 'cancel' button
- Asynchronous work requests could be executed twice (since 2.5pre6)
- Fixed incorrect behaviour of home/end keys on lines which only
  contained whitespace (since 2.5pre5)

* Version 2.5pre6

+ Enhancements

- Caret register code is now more efficent

+ Bug Fixes

- Initial size of plugin download progress dialog box was wrong
- 'Replace All' with the directory file set didn't work
- By not specifying a 'To:' field, the 'Send' command could trigger anti-spam
  filters
- 'Latest Version' plugin could throw a NoSuchMethodError
- Home/end keys would behave incorrectly if smart home/end was disabled
  (since 2.5pre5)
- End key could throw an exception (since 2.5pre5)
- Plugin manager didn't show newly installed JARs in list (since 2.5pre3)
- WorkThread.waitForRequests() had a subtle bug, which only manifested
  when doing a replace all with the directory file set (since 2.5pre1)
- Possible fix for bug where keys pressed in the 'find' field would be
  forwarded to the text area also

* Version 2.5pre5

+ New Features

- Improved home/end commands; they now go to the first/last non-whitespace
  character on the current line, then the start/end of the line, and then
  to the first/last visible line. Also, even if, for example, the caret is
  already at the start of the line, HOME still needs to be pressed three
  times to go to the start of the viewscreen. This should make these
  commands more reliable in macros

+ Enhancements

- 'Go to End Of Indent' command removed (just press HOME instead); shortcut
  of 'Indent Selected Lines' changed to C+i
- 'Create new java file' and 'Create new java applet' macros added
  (Valery Kondakoff)
- 'Print' command now prints a footer with the date/time and page number
  at the bottom of each page
- The help viewer now displays plain text files in a monospaced font
- Many dialog boxes tweaked to comply with Java look & feel guidelines;
  as a result they look better
- Improved 'Send' command error handling
- Documentation updates

+ Bug Fixes

- Fixed incorrect error message displayed when a plugin depends on another
  one that isn't installed
- Plugin manager's 'update' feature didn't work (since 2.5pre3)
- Minor changes to scrolling code, might solve recently reported problems
  when running on Java 2
- The tab width was incorrect in printed output
- Symlinks should now work in the FTP browser (but even directory links
  are still disaplayed as regular files; fixing this would require more
  work) (since 2.5pre1)
- Backup directory code was broken (since 2.5pre1)
- Entering an invalid FTP URL in the 'Open Path' dialog box will no longer
  throw an IllegalArgumentException and hang jEdit (since 2.5pre1)
- Buffer._read() called setDirty() in a non-threadsafe way, this could
  cause problems with buffer tabs for example (since 2.5pre1)
- Removed useless debug message displayed when going into background mode

* Version 2.5pre4

+ New Features

- The tool bar can be edited in Utilities->Global Options->Tool Bar
- For plugin developers: new EnhancedFrame class provides automatic
  Enter/Escape key handling for JFrames
- New RegistersChanged message is sent when the value of a register changes
- Position registers and markers are highlighted in the gutter
- 'Go to Next Marker' and 'Go to Previous Marker' commands added

+ Enhancements

- Single-clicks in the results list of the 'find file' widget will now
  select that file in the file chooser
- Broken plugins will no longer prevent the 'Plugins' menu from appearing
- HyperSearch is now a frame, not a dialog box
- Documentation updates
- PHP mode now highlights statements with '@' better
- The gutter now only repaints lines which really need repainting
- File chooser is now a little bit wider
- Shell scripts used to create the jEdit installer are now included in
  the 'jEdit source' fileset

+ Bug Fixes

- FTP didn't work at all (since 2.5pre3)
- Fixed NPE that could occur when performing an undo (since 2.5pre1)
- Added jEdit.getPlugin(String name) method, which was missing in 2.5pre3
- Shell script mode didn't highlight some variables correctly (since 2.4pre2)
- Gutter highlight tool tips didn't work (this bug was never encountered
  in practice since no plugins actually used gutter highlights)
- Fixed possible NPE in focus handling code
- Mode option pane didn't save settings sometimes
- Tab size setting in mode XML files was ignored
- Povray mode had an incorrect 'label' property
- Fixed ArrayIndexOutOfBoundsException in 'end' action

* Version 2.5pre3

+ New Features

- Various properties can now be set on a mode-specific basis in
  Utilities->Global Options->Edit Modes
- The HyperSearch feature now performs searches in a background thread
- The '-gui' command line switch will force jEdit to create an initial
  view, even if background mode is active

+ Enhancements

- Documentation updates
- The plugin manager no longer lists JARs with no plugins in them (for
  example, class libraries) as "not loaded"
- Improved 'View Registers' command

+ Bug Fixes

- EditPaneUpdate.CREATED message was never sent (since 2.5pre2)
- Sometimes, resizing the split panes wasn't possible (since 2.5pre2)
- FtpClient didn't work on MacOS (since 2.5pre1)
- When splitting a view, the newly created edit pane would edit the wrong
  buffer (since 2.5pre2)
- The file finder in the open dialog box didn't support case-insensitive
  pattern matching (since 2.5pre2)
- Wait cursor handling was broken in the FTP browser (since 2.5pre1)
- The title bar wasn't updated after a view was unsplit (since 2.5pre2)
- '$' characters in action commands were not escaped when recording macros
  (since 2.5pre2)
- *.idl files were not opened in IDL mode (since 2.4pre2)
- The status bar wasn't updated properly while a repeat count was being
  entered (since 2.5pre2)
- Fixed possible NPE when C+e C+w was pressed (since 2.5pre2)
- Console macros were broken (since 2.5pre2)
- Batch file mode didn't highlight variables correctly (since 2.4pre2)

* Version 2.5pre2

+ New Features

- New macro language feature: writing $x where x is a register in an
  action command will substitute contents of register x. \$ can be used
  to insert a literal '$'
- You can now disable file tokenization on load in Utilities->Global Options.
  This results in faster file loading, but slightly less accurate syntax
  highlighting
- You can now edit more than one buffer at once in a split view
- Open and save dialog boxes now have a nifty 'find file' tool (written by
  Ken Klinner, kklinner@opiom.com)
- Nifty new status bar

+ Enhancements

- jEdit download is now about 500K smaller thanks to an improved installer
- User input is blocked while I/O is in progress
- Improved focus handling when splitting views
- The 'Macros' menu now substitutes spaces for underscores in macro names
- 'Close File' command renamed to 'Close Buffer' for consistency
- The ViewUpdate.CREATED message is now sent after views already have the
  correct geometry
- Commenting commands insert spaces around comment strings again

+ Bug Fixes

- Fixed possible EmptyStackException in View.popStatus() (since 2.5pre1)
- Possible fix for IBM JDK 1.3 for Linux NPE in
  EnhancedCheckBoxMenuItem.Model.isSelected()
- HyperSearch didn't work with the directory list set properly (since 2.5pre1)
- Fixed minor buffer list sorting bug
- Fixed obscure buffer switching bug
- A few mode files had minor errors
- Minor text area fix: EOL markers are now always painted with the default
  font style
- Very minor change to buffer tabs focus handling; might solve recently
  reported JDK 1.3 focus problems

+ API Changes

- New EditPaneUpdate message; getWhat() method returns one of the following:
  EditPaneUpdate.CREATED (replaces ViewUpdate.TEXTAREA_CREATED)
  EditPaneUpdate.DESTROYED (replaces ViewUpdate.TEXTAREA_DESTROYED)
  EditPaneUpdate.BUFFER_CHANGED (replaces ViewUpdate.BUFFER_CHANGED)

* Version 2.5pre1

+ New Features

- New I/O system.
  - Multithreaded - this should improve perceived performance, and you
    can abort lengthy I/O operations
  - Supports pluggable 'virtual filesystems' which can support transparent
    loading and saving of non-local files
  - The 'File', 'Url' and 'Ftp' VFS's are included with the core. More can
    be added as plugins
  - The code is still a bit rough. User input isn't blocked while saving or
    loading, and there is no way to abort a request. This will be be fixed in
    future releases.
- Undo queue size can be set
- You can now prompt the user for input in macros; try invoking
  'Macros->Prompt User for Input' while recording
- Background mode; if jEdit is started with the -background switch, it will
  not create an initial view and instead wait for client connections. Also,
  closing all views in background mode will not exit jEdit; to exit a
  backgrounded instance, invoke 'File->Exit'.

+ Enhancements

- MARK_PREVIOUS rules are now checked for after keywords
- Function calls are highlighted in C-like modes (C, C++, Java, etc)
- Sequences with a trailing 'd', 'f', or 'l' are now highlighted as digits
- Modal dialog boxes are now centered relative to the current view
- Improved backup directory feature (Richard S. Hall)
- If the pre-load checks (if the file is a directory, if the file is readable,
  etc) fail, then jEdit will no longer create an empty buffer
- jEdit now saves it's settings when the global options dialog box is closed,
  instead of waiting until you exit
- The default focus in many dialog boxes should now be set properly
- Improved key binding handling -- the text area no longer needs to have focus
  for keyboard shortcuts to work

+ Bug Fixes

- DirectoryListSet will no longer throw exceptions if no files to search could
  be found
- Multiline tokens would not be highlighted correctly sometimes (since 2.4pre1)
- Several actions didn't check the read only flag of a buffer before making
  changes
- Sometimes when files were opened the text area wouldn't update its internal
  count of visible lines. This caused problems with scrolling
- In C-like edit modes, 'for' statements weren't indented properly
- Undos should no longer retain references to text areas which no longer
  exist
- Reloading a file would muck up HyperSearch results

+ API Changes

- BufferUpdate.LOADING removed. Use BufferUpdate.LOADED instead
- Deprecated Buffer.loadIfNecessary() method removed
- Because of the new multithreaded I/O system, plugins that assume buffers
  obtained with getBuffer() or openFile() always have valid data in them
  will no longer work. You must now either:
  - wait for all I/O requests to complete with VFSManager.waitForRequests()
    this is not recommended as it ties up the AWT thread
  - wait for the BufferUpdate.LOADED message to arrive
  - add a runnable to the I/O thread with VFSManager.runInAWTThread().
    Runnables added with this method are executed after all I/O requests
    are completed.
- jEdit.openFile() may now return a null value, if, for example, an invalid URL
  was specified. This is different from previous jEdit versions, where this
  method would always return a value.
- Plugins whose option panes don't implement the init() will no longer work.
  Previously, this method was called with reflection, but now it has been
  added to the OptionPane interface
- InputHandler and DefaultInputHandler classes moved to org.gjt.sp.jedit.gui
  package
- JEditTextArea.getInputHandler() method removed; use View.getInputHandler()
  instead
