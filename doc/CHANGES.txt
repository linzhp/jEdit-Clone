JEDIT 3.0 VERSION HISTORY

* Version 3.0pre1

+ New Features

- Macros can now be added to the tool bar and right-click context menu
- The bracket matching code now only checks syntax tokens of the same type
  as the bracket for matches. As a result, string literals and comments
  containing brackets should no longer cause problems
- New 'EditBuddy' plugin, included in the jEdit distribution, displays
  'initial setup' and 'new version' wizards when jEdit is first run and
  when a new version is installed, respectively. These wizards help you
  configure firewall settings, install and update plugins, view the
  change log, and other such stuff.

+ Enhancements

- Gutter border color now reflects if the respective text area has focus
- Menu bar code restructured somewhat
- View-related commands moved out of Utilities menu to new View top-level
  menu, Buffers menu is now a submenu of the new View menu as well
- Colored 'orbs' displaying file modification status are now displayed in
  the Buffers menu
- Registers and markers are now highlighted using different colors in the
  gutter
- The plugin manager now deletes files for real when removing and upgrading
  plugins; previously, it shoved them in a 'backup' directory

+ Incompatibilities

- Macro shortcuts are now stored in properties named "play-macro@<macro
  name>.shortcut". As a result, old macro key bindings will no longer
  work; you will need to reassign them. Yes, this change is annoying,
  but supporting the old scheme with the new menu bar code would be more
  effort than it's worth.

+ API Changes

- GUIUtilities.loadMenuItem(View,String) deprecated. Plugins targeted at
  jEdit 3.0 or later should use GUIUTilities.loadMenuItem(String) instead.
  Don't worry, since all existing plugins use the old method, it won't be
  removed any time soon, if at all.
- Signature of TextUtilities.findMatchingBracket() is now
  findMatchingBracket(SyntaxDocument doc, int line, int offset)
- Return type of TokenMarker.markTokens() changed from Token to
  TokenMarker.LineInfo
- EditActions can now be invoked without a view (of course the action
  will still fail if it calls EditAction.getView())
