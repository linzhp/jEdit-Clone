JEDIT 2.2 TO DO

CVS: add Eiffel stuff, also FontComboBox

* New features:

- 'startup.action' property, executed when jEdit started with no files
  on command line. Can be 'new-file', 'open-file', 'load-desktop', etc.

- SyntaxDocument.addEdit() method. Buffer implements it to do the
  compound-edit logic. JEditTextArea adds insignificant edits every time
  the caret is moved.

- Macro recorder
  - Write the following actions:
    - set-search-string
    - set-replace-string
    - set-search-parameters (regexp, icase, {current,all})
  - Macros bound to events?

- Close dialog box that lists all dirty buffers
  - Save, Discard, Cancel buttons
  - Clicking on a buffer in the list will switch to that buffer in the
    view

- Recording and repeating menu items
  - Could be implemented by giving menu items a 'proxy' action listener
    that performed repetition and recording, and then passed the event
    to the action

- More intelligent auto indent.

- When pasting text, indent it, also if it contains multiple lines, insert
  new lines at the start and end. Implement in jEdit, not text area

- Reverse search. This will require changes to gnu.regexp

- Recursive directory search

- Integrate XMode

- Integrate EditBus if enough plugins take advantage of it

- To impress Windows point-and-drool types, create a plugin that adds
  pretty icons for all menu item commands

* Code cleanups:

- View.show/hideWaitCursor(): increments waitCount for nested operation
  (use in save-all)

- Move some DefaultInputHandler logic to InputHandler (make it a class)

- Move repeating and recording to JEditInputHandler, which calls
  view.showStatus() to show the repeat count, and so on. This will mean
  that we can get rid of InputHandler.{NonRepeatable,NonRecordable} and
  instead implement them as methods in the EditAction class

- indent-line action: when you press enter, indent-on-enter insert an
  enter char and then calls execAction(indent-line). When recording a
  macro, the indent-line will only be recorded if indent-on-enter is
  enabled, thus making macros more portable

- Mode system changes: mode.XXX.filename-glob: all filenames globbed against
  this property. mode.XXX.firstline-glob: corresponding glob for first line
  of file

* Ideas for plugins:

- Version control
- Project manager
- Application/applet/plugin wizard
- Localizations for specific languages
- Generic EditBus-aware plugin for invoking other programs inside the JVM
- Debugger front-end (to jdb, gdb, and so on)
- VI emulation (will be a bit tricky until the InputHandler changes planned
for jEdit 2.2)
- Menu bar/right-click context menu editor
