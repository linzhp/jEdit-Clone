Here is my to do list for jEdit 3.1. Tell me what you think.

* Folding

'foldMode' buffer local property is either 'embedded' or 'indent'.

In 'embedded' mode, buffers are scanned for customizable start/end
strings; for example, { and }.

In 'indent' mode, folds are added on lines where the indent increases
from the previous.

Folding commands will be in the View->Folding menu.

Fold arrows will be shown in the gutter.

* LineInfo array moved

The lineInfo array and associated methods (markTokens(), insertLines(),
deleteLines()) will be moved from the TokenMarker class to the Buffer
class.

* Make split configuration persistent

The editor will remember all split locations and what buffers were open
in which.

* XMode rule inclusion

A new tag will be added:

<INCLUDE NAME="<ruleset name>" />

This tag will copy all rules from the specified ruleset to the current
ruleset. This will reduce rule duplication by allowing, for example,
XML-derived modes (HTML, ASP, JSP, PHP, ...) to share a common set of
rules.

* More reliable saving

When saving a file, it will first be saved to .<filename>.save, and
only then renamed to <filename> if the save was successful.

* Minor changes

- The File->Current Directory menu will not list backups and autosaves.

- All available fonts will be shown in the font selector.

- The base Metal L&F font will be configurable.

- The abbrev option pane will edit the currently selected abbrev in a
  text area.

- The shortcuts option panes will support grabbing keys from the
  keyboard, and assignment of more than one shortcut per command.

- When running with the Metal L&F, the docking area border will look
  like a split pane divider

- Improve next/prev-paragraph commands -- if a line contains ONLY
  whitespace, treat it as a paragraph separator

- Better support for read-only files: option for changing read only
  flag in buffer options dialog, automatic detect when read only
  status is changed on disk

- File system browser: change 'Open in new view' to 'Open in new split'

- Make modifier code keyboard layout-neutral: handle modifier+key char
  in keyTyped()

- Bracket double click behavior is really annoying - make if configurable

- .shortcut properties in plugins don't work. This is not too critical,
  but it would be nice if it was fixed anyway.

* Documentation

Migrate to DocBook/XML.

* Feature removals

- Markers will be removed

-- Slava Pestov <sp@gjt.org>
